version: "3.8"

volumes:
  celery-data:

services:
  api:
    container_name: FastAPI_api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    entrypoint: >
      sh -c "
        python -m alembic upgrade head
        uvicorn main:app --host 0.0.0.0 --reload
      "
    networks:
      - mynetwork
    ports:
      - "8000:8000"
    volumes:
      - celery-data:/usr/src/app/data
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  celery:
    container_name: "celery"
    build:
      context: .
      dockerfile: ./src/celery/Dockerfile
    command: celery -A tasks worker --loglevel=INFO
    env_file:
      - .env
    volumes:
      - celery-data:/celery/data
    networks:
      - mynetwork
    depends_on:
      rabbitmq:
        condition: service_healthy
  db:
    container_name: "postgres-db"
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DBUSER:-postgres}
      - POSTGRES_PASSWORD=${DBPASSWORD:-postgres}
      - POSTGRES_DB=${DBNAME:-postgres}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DBNAME} -U ${DBUSER}" ]
      interval: 5s
      timeout: 20s
      retries: 100
  redis:
    container_name: "redis_cache"
    image: redis:7-alpine
    environment:
      - REDIS_PORT=${REDIS_PORT:-6379}
    networks:
      - mynetwork
    expose:
      - "${REDIS_PORT}"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 20s
      retries: 100
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-mypass}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
